(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),c=t.n(a),l=t(667),i=t.n(l),s=new URL(t(535),t.b),d=c()(o()),A=i()(s);d.push([e.id,'* {\n    margin: 0px;\n    padding: 0px;\n}\n\n@font-face {\n    font-family: "Roboto Mono";\n    src: url('+A+');\n}\n\n:root { /* onedark theme */\n    --bg-color: #2f343f;\n    --caret-color: #61afef;\n    --main-color: #61afef;\n    --sub-color: #eceff4;\n    --sub-alt-color: #262b34;\n    --text-color: #98c379;\n    --darker-text-color: #477427;\n    --error-color: #e86c75;\n    --error-extra-color: #d62436;\n    --sub-main-color: #a5cae9;\n    --square-length: 30px;\n    --circle-length: calc(var(--square-length) / 2.5);\n}\n\n::selection {\n    color: var(--bg-color);\n    background-color: var(--text-color);\n}\n\nh1 {\n    margin-top: 30px;\n}\n\n* { /* needed or else text could be dragged onto the board*/\n    /* user-select: none; */\n}\n\nbody {\n    background-color: var(--bg-color);\n    color: var(--text-color);\n    font-family: "Roboto Mono", sans-serif, Arial;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.content {\n    flex: 1;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 100px;\n}\n\n.board1, .board2 {\n    height: calc(10 * var(--square-length));\n    width: calc(10 * var(--square-length));\n    border: 2px solid var(--main-color);\n}\n\nbutton {\n    margin-bottom: 200px;\n    padding: 10px;\n    border-radius: 10px;\n    outline: none;\n    border: none;\n    background-color: var(--main-color);\n    color: var(--bg-color);\n    font-weight: bold;\n    border: 2px solid var(--bg-color);\n    user-select: none;\n}\n\nbutton:hover {\n    background-color: var(--text-color);\n    border: 2px solid var(--bg-color);\n}\n\nbutton:active {\n    background-color: var(--sub-color);\n    border: 2px solid var(--text-color);\n}\n\n.board {\n    display: grid;\n    grid-template-columns: repeat(10, var(--square-length));\n    grid-template-rows: repeat(10, var(--square-length));\n    user-select: none;\n}\n\n.board > div {\n    height: var(--square-length);\n    width: var(--square-length);\n    border: 1px solid var(--main-color);\n    background-color: var(--sub-color);\n}\n\n.board .ship {\n    background-color: var(--text-color);\n    color: var(--darker-text-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.board .shipHit {\n    border: 1px solid var(--error-extra-color);\n    background-color: var(--error-color);\n    color: var(--error-extra-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: var(--square-length);\n}\n\n.board .missedHit {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--sub-main-color);\n}\n\n.board .missedHit .circle {\n    height: var(--circle-length);\n    width: var(--circle-length);\n    border-radius: var(--circle-length);\n    background-color: var(--main-color);\n}\n\nh3 {\n    margin-bottom: 80px;\n}\n\nh4 {\n    color: var(--error-color);\n    margin-bottom: 80px;\n    margin-top: -60px;\n}\n\nh4::selection {\n    background-color: var(--error-color);\n    color: var(--bg-color);\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,4CAA8B;AAClC;;AAEA,QAAQ,kBAAkB;IACtB,mBAAmB;IACnB,sBAAsB;IACtB,qBAAqB;IACrB,oBAAoB;IACpB,wBAAwB;IACxB,qBAAqB;IACrB,4BAA4B;IAC5B,sBAAsB;IACtB,4BAA4B;IAC5B,yBAAyB;IACzB,qBAAqB;IACrB,iDAAiD;AACrD;;AAEA;IACI,sBAAsB;IACtB,mCAAmC;AACvC;;AAEA;IACI,gBAAgB;AACpB;;AAEA,IAAI,uDAAuD;IACvD,uBAAuB;AAC3B;;AAEA;IACI,iCAAiC;IACjC,wBAAwB;IACxB,6CAA6C;IAC7C,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,OAAO;IACP,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,uCAAuC;IACvC,sCAAsC;IACtC,mCAAmC;AACvC;;AAEA;IACI,oBAAoB;IACpB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,YAAY;IACZ,mCAAmC;IACnC,sBAAsB;IACtB,iBAAiB;IACjB,iCAAiC;IACjC,iBAAiB;AACrB;;AAEA;IACI,mCAAmC;IACnC,iCAAiC;AACrC;;AAEA;IACI,kCAAkC;IAClC,mCAAmC;AACvC;;AAEA;IACI,aAAa;IACb,uDAAuD;IACvD,oDAAoD;IACpD,iBAAiB;AACrB;;AAEA;IACI,4BAA4B;IAC5B,2BAA2B;IAC3B,mCAAmC;IACnC,kCAAkC;AACtC;;AAEA;IACI,mCAAmC;IACnC,+BAA+B;IAC/B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,0CAA0C;IAC1C,oCAAoC;IACpC,+BAA+B;IAC/B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,uCAAuC;AAC3C;;AAEA;IACI,4BAA4B;IAC5B,2BAA2B;IAC3B,mCAAmC;IACnC,mCAAmC;AACvC;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,oCAAoC;IACpC,sBAAsB;AAC1B",sourcesContent:['* {\n    margin: 0px;\n    padding: 0px;\n}\n\n@font-face {\n    font-family: "Roboto Mono";\n    src: url(./Roboto-Regular.ttf);\n}\n\n:root { /* onedark theme */\n    --bg-color: #2f343f;\n    --caret-color: #61afef;\n    --main-color: #61afef;\n    --sub-color: #eceff4;\n    --sub-alt-color: #262b34;\n    --text-color: #98c379;\n    --darker-text-color: #477427;\n    --error-color: #e86c75;\n    --error-extra-color: #d62436;\n    --sub-main-color: #a5cae9;\n    --square-length: 30px;\n    --circle-length: calc(var(--square-length) / 2.5);\n}\n\n::selection {\n    color: var(--bg-color);\n    background-color: var(--text-color);\n}\n\nh1 {\n    margin-top: 30px;\n}\n\n* { /* needed or else text could be dragged onto the board*/\n    /* user-select: none; */\n}\n\nbody {\n    background-color: var(--bg-color);\n    color: var(--text-color);\n    font-family: "Roboto Mono", sans-serif, Arial;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.content {\n    flex: 1;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 100px;\n}\n\n.board1, .board2 {\n    height: calc(10 * var(--square-length));\n    width: calc(10 * var(--square-length));\n    border: 2px solid var(--main-color);\n}\n\nbutton {\n    margin-bottom: 200px;\n    padding: 10px;\n    border-radius: 10px;\n    outline: none;\n    border: none;\n    background-color: var(--main-color);\n    color: var(--bg-color);\n    font-weight: bold;\n    border: 2px solid var(--bg-color);\n    user-select: none;\n}\n\nbutton:hover {\n    background-color: var(--text-color);\n    border: 2px solid var(--bg-color);\n}\n\nbutton:active {\n    background-color: var(--sub-color);\n    border: 2px solid var(--text-color);\n}\n\n.board {\n    display: grid;\n    grid-template-columns: repeat(10, var(--square-length));\n    grid-template-rows: repeat(10, var(--square-length));\n    user-select: none;\n}\n\n.board > div {\n    height: var(--square-length);\n    width: var(--square-length);\n    border: 1px solid var(--main-color);\n    background-color: var(--sub-color);\n}\n\n.board .ship {\n    background-color: var(--text-color);\n    color: var(--darker-text-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.board .shipHit {\n    border: 1px solid var(--error-extra-color);\n    background-color: var(--error-color);\n    color: var(--error-extra-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: var(--square-length);\n}\n\n.board .missedHit {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--sub-main-color);\n}\n\n.board .missedHit .circle {\n    height: var(--circle-length);\n    width: var(--circle-length);\n    border-radius: var(--circle-length);\n    background-color: var(--main-color);\n}\n\nh3 {\n    margin-bottom: 80px;\n}\n\nh4 {\n    color: var(--error-color);\n    margin-bottom: 80px;\n    margin-top: -60px;\n}\n\nh4::selection {\n    background-color: var(--error-color);\n    color: var(--bg-color);\n}'],sourceRoot:""}]);const u=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var l=0;l<this.length;l++){var i=this[l][0];null!=i&&(c[i]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&c[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},c=[],l=0;l<e.length;l++){var i=e[l],s=r.base?i[0]+r.base:i[0],d=a[s]||0,A="".concat(s," ").concat(d);a[s]=d+1;var u=t(A),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var C=o(p,r);r.byIndex=l,n.splice(l,0,{identifier:A,updater:C,references:1})}c.push(A)}return c}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var l=t(a[c]);n[l].references--}for(var i=r(e,o),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},535:(e,n,t)=>{e.exports=t.p+"fc2b5060f7accec5cf74.ttf"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),c=t.n(a),l=t(565),i=t.n(l),s=t(216),d=t.n(s),A=t(589),u=t.n(A),p=t(28),C={};C.styleTagTransform=u(),C.setAttributes=i(),C.insert=c().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=d(),n()(p.Z,C),p.Z&&p.Z.locals&&p.Z.locals;const f=()=>{const e=[];for(let n=0;n<10;n+=1)e.push(new Array(10).fill(0));const n=[];return{receiveAttack:(t,r)=>{const o=e[t][r];if(0===o)e[t][r]=2;else if(e[t][r]=1,o.hit(),o.isSunk()){const e=n.indexOf(n);n.splice(e,1)}return e[t][r]},placeShip:(t,r,o,a)=>{const c=(e=>{let n=0;return{hit:()=>{n+=1},isSunk:()=>n===e}})(t);n.push(c);let l=!1;if(0===a&&r+t<=10){let n=0;for(;n<t;)e[r+n][o]=c,n+=1;l=!0}else if(1===a&&r-t>=0){let n=0;for(;n<t;)e[r-n][o]=c,n+=1;l=!0}else if(2===a&&o+t<=10){let n=0;for(;n<t;)e[r][o+n]=c,n+=1;l=!0}else if(3===a&&o-t>=0){let n=0;for(;n<t;)e[r][o-n]=c,n+=1;l=!0}return l},isAllSunk:()=>0===n.length,getBoard:()=>e}},h=(e,n)=>{e.innerHTML="";const t=n.getBoard(),r=document.createElement("div");r.classList.add("board"),r.classList.add("playerBoard");for(let e=0;e<t.length;e+=1)for(let n=0;n<t[e].length;n+=1){const o=`i${10*e+n}`,a=t[e][n],c=document.createElement("div");if(c.classList.add(o),0===a)c.classList.add("sea");else if(1===a)c.classList.add("shipHit"),c.textContent="X";else if(2===a){c.classList.add("missedHit");const e=document.createElement("div");e.classList.add("circle"),c.appendChild(e)}else c.classList.add("ship");r.appendChild(c)}e.appendChild(r)},m=(e,n)=>{e.innerHTML="";const t=n.getBoard(),r=document.createElement("div");r.classList.add("board"),r.classList.add("enemyBoard");for(let e=0;e<t.length;e+=1)for(let n=0;n<t[e].length;n+=1){const o=`i${10*e+n}`,a=t[e][n],c=document.createElement("div");if(c.classList.add(o),1===a)c.classList.add("shipHit"),c.textContent="X";else if(2===a){c.classList.add("missedHit");const e=document.createElement("div");e.classList.add("circle"),c.appendChild(e)}else c.classList.add("sea");r.appendChild(c)}e.appendChild(r)},g=(e,n,t,r,o)=>{e.innerHTML="";const a=n.getBoard(),c=document.createElement("div");c.classList.add("board"),c.classList.add("enemyBoard");for(let l=0;l<a.length;l+=1)for(let i=0;i<a[l].length;i+=1){const s=`i${10*l+i}`,d=a[l][i],A=document.createElement("div");if(A.classList.add(s),1===d)A.classList.add("shipHit"),A.textContent="X";else if(2===d){A.classList.add("missedHit");const e=document.createElement("div");e.classList.add("circle"),A.appendChild(e)}else A.classList.add("sea"),A.addEventListener("mouseenter",(()=>{A.style.backgroundColor="#e86c75"})),A.addEventListener("mouseleave",(()=>{A.style.backgroundColor="#eceff4"})),A.addEventListener("click",(()=>{if("object"==typeof a[l][i]?(n.receiveAttack(l,i),a[l][i]=1):a[l][i]=2,t(),g(e,n,t,r,o),h(r,o),n.isAllSunk()){console.log("player has won!");const t=document.createElement("h3");t.textContent="Player has won!",t.style.marginTop="-175px",document.querySelector("body").appendChild(t),m(e,n)}else if(o.isAllSunk()){console.log("computer has won");const t=document.createElement("h3");t.textContent="Computer has won!",t.style.marginTop="-175px",document.querySelector("body").appendChild(t),m(e,n)}}));c.appendChild(A)}e.appendChild(c)};document.querySelectorAll("h1, h3, h4").forEach((e=>e.addEventListener("dragstart",(e=>e.preventDefault()))));const v=(()=>{const e=f();return e.placeShip(1,9,0,0),e.placeShip(2,6,1,0),e.placeShip(2,0,1,0),e.placeShip(1,3,2,0),e.placeShip(3,6,3,0),e.placeShip(1,0,5,0),e.placeShip(3,0,9,0),e.placeShip(2,2,5,2),e.placeShip(4,4,5,2),e.placeShip(1,8,8,0),e})(),b=(()=>{const e=f();return e.placeShip(1,5,5,0),e.placeShip(2,6,1,2),e.placeShip(2,6,7,0),e.placeShip(1,8,1,0),e.placeShip(3,9,3,2),e.placeShip(1,3,7,0),e.placeShip(3,0,9,0),e.placeShip(2,3,2,0),e.placeShip(4,0,0,0),e.placeShip(1,8,9,0),e})(),B=document.querySelector(".board1"),I=document.querySelector(".board2");((e,n)=>{e.innerHTML="";const t=n.getBoard(),r=document.createElement("div");r.classList.add("board"),r.classList.add("playerBoard");const o=[];function a(e){e.dataTransfer.setData("text/plain",`${e.target.id}|${e.target.classList[0]}|${e.target.textContent}`)}function c(e){e.preventDefault()}function l(e){const n=e.cloneNode(!0);e.parentNode.replaceChild(n,e)}function i(e){const n=e.dataTransfer.getData("text/plain").split("|"),r=document.querySelector(`#${n[0]}`),o=document.querySelector(`#${e.target.id}`),s=o.classList[0];o.className="",o.classList.add(`${n[1]}`),o.textContent=`${n[2]}`,r.textContent="",r.className="",r.classList.add(`${s}`),l(r),l(o);const d=document.querySelector(`#${r.id}`),A=document.querySelector(`#${o.id}`);d.setAttribute("draggable",!1),A.setAttribute("draggable",!0),d.addEventListener("drop",(e=>i(e))),d.addEventListener("dragover",(e=>c(e))),A.addEventListener("dragstart",(e=>a(e)));let u=d.id;u=u.slice(1,u.length),u=parseInt(u,10);let p=A.id;p=p.slice(1,p.length),p=parseInt(p,10),function(e,n){const r=t[e[0]][e[1]];t[e[0]][e[1]]=t[n[0]][n[1]],t[n[0]][n[1]]=r}([Math.floor(u/10),u%10],[Math.floor(p/10),p%10])}for(let e=0;e<t.length;e+=1)for(let n=0;n<t[e].length;n+=1){const l=`i${10*e+n}`,s=t[e][n],d=document.createElement("div");if(d.setAttribute("id",l),0===s)d.classList.add("sea"),d.addEventListener("dragover",(e=>c(e))),d.addEventListener("drop",(e=>i(e)));else{let e=o.indexOf(s);-1===e&&(o.push(s),e=o.indexOf(s)),d.textContent=`${e}`,d.classList.add("ship"),d.setAttribute("draggable",!0),d.addEventListener("dragstart",(e=>a(e)))}r.appendChild(d)}e.appendChild(r)})(B,v),m(I,b),document.querySelector("button").addEventListener("click",(()=>{document.querySelectorAll("h3, h4, button").forEach((e=>e.parentNode.removeChild(e))),document.querySelector(".content").style["margin-bottom"]="380px";const e=(e=>{const n=[];for(let e=0;e<10;e+=1)for(let t=0;t<10;t+=1)n.push(`${e}|${t}`);let t,r;for(let e=n.length-1;e>0;e-=1)t=Math.floor(Math.random()*(e+1)),r=n[e],n[e]=n[t],n[t]=r;return{randomAttack:()=>{const t=n.shift(),[r,o]=t.split("|");e.receiveAttack(r,o)},attacks:n}})(v);h(B,v),g(I,b,(function(){e.randomAttack()}),B,v)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,